<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.ProductsMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.bean.Products">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="img_path" jdbcType="VARCHAR" property="imgPath" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="isVal" jdbcType="VARCHAR" property="isval" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="shop_owner" jdbcType="VARCHAR" property="shopOwner" />
    <result column="owner_id" jdbcType="INTEGER" property="ownerId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, price, img_path, type_id, type_name, isVal, count, description, shop_owner, 
    owner_id
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.bean.ProductsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from products
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from products
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from products
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.bean.ProductsExample">
    delete from products
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.bean.Products">
    insert into products (id, name, price, 
      img_path, type_id, type_name, 
      isVal, count, description, 
      shop_owner, owner_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, 
      #{imgPath,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, #{typeName,jdbcType=VARCHAR}, 
      #{isval,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{shopOwner,jdbcType=VARCHAR}, #{ownerId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.bean.Products">
    insert into products
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="imgPath != null">
        img_path,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="typeName != null">
        type_name,
      </if>
      <if test="isval != null">
        isVal,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="shopOwner != null">
        shop_owner,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="imgPath != null">
        #{imgPath,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="isval != null">
        #{isval,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="shopOwner != null">
        #{shopOwner,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.bean.ProductsExample" resultType="java.lang.Integer">
    select count(*) from products
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectCountNotEnough" parameterType="java.util.List" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from products
    <where>
      <trim prefix="(" suffix=") and">
        <foreach collection="list" item="item" separator="or">
          id = #{item.productId}
        </foreach>
      </trim>
      <trim prefix=" count &lt; case" suffix=" end ">
        <foreach collection="list" index="index" item="item">
          <if test="item.count != null">
            when id = #{item.productId} then #{item.count}
          </if>
        </foreach>
      </trim>
    </where>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update products
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.imgPath != null">
        img_path = #{record.imgPath,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.typeName != null">
        type_name = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.isval != null">
        isVal = #{record.isval,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.shopOwner != null">
        shop_owner = #{record.shopOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update products
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      img_path = #{record.imgPath,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=INTEGER},
      type_name = #{record.typeName,jdbcType=VARCHAR},
      isVal = #{record.isval,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      shop_owner = #{record.shopOwner,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.bean.Products">
    update products
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="imgPath != null">
        img_path = #{imgPath,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null">
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="isval != null">
        isVal = #{isval,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="shopOwner != null">
        shop_owner = #{shopOwner,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.bean.Products">
    update products
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      img_path = #{imgPath,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      type_name = #{typeName,jdbcType=VARCHAR},
      isVal = #{isval,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      shop_owner = #{shopOwner,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateCountMany" parameterType="java.util.List">
    update products
    <trim prefix=" set count = case" suffix=" end ">
      <foreach collection="list" index="index" item="item">
        <if test="item.count != null">
          when id = #{item.productId} then count - #{item.count}
        </if>
      </foreach>
    </trim>
    <where>
      <foreach collection="list" item="item" separator="or">
        id = #{item.productId}
      </foreach>
    </where>
  </update>
</mapper>